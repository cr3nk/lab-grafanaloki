version: "3.4"

services:
  #my-nginx-service:
  #  image: nginx
  #  container_name: nginx-service
  #  ports:
  #    - 8000:80
  #  environment:
  #    - FOO=bar
  #  logging:
  #    driver: loki
  #    options:
  #      loki-url: http://localhost:3100/loki/api/v1/push
  #      loki-external-labels: job=dockerlogs,owner=aegis,environment=development
  #  restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
    - ./config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    ports:
    - "3000:3000"
    restart: unless-stopped

  loki:
   image: grafana/loki:latest
   container_name: loki
   user: root
   volumes: 
     - ./config/config.yaml:/config/config.yaml
     - ./loki/loki-data:/tmp/loki
     - ./loki/loki-wal:/tmp/wal
   entrypoint:
     - /usr/bin/loki
     - config.file=./config/config.yaml
   ports:
     - "3100:3100"
   restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/log/auth.log:/var/log/auth.log
      - /var/log:/var/log
      - ./config/promtail-config.yml:/etc/config/promtail-config.yml
    entrypoint:
      - /usr/bin/promtail
      - -config.file=/etc/config/promtail-config.yml
    ports:
      - "9080:9080"
    restart: unless-stopped


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - "./config:/config"
      - ./alertmanager:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug  

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    restart: unless-stopped  

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - '8086:8086'
    volumes:
      - ./influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin   
    restart: unless-stopped   

